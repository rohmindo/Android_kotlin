1. build.gradle 에 추가
Room입력하고 alt-enter 후 
코틀린 사용은 annotation을 kapt로 바꾸고
apply plugin: 'kotlin-kapt' 추가

2. data class 생성 (사용할 db data형식)
@Entity
data class Todo(
    val title : String
){
    @PrimaryKey(autoGenerate = true) var id:Int=0
}

3. Dao 생성(interface)
interface TodoDao {
    @Query("SELECT title FROM Todo")
    fun getAll() : List<String>

    @Insert
    fun insert(todo:Todo)

    @Update
    fun update(todo:Todo)

    @Delete
    fun delete(todo:Todo)

}

4. 
@Database(entities = [Todo::class], version = 1)
    abstract class AppDatabase : RoomDatabase() {
        abstract fun TodoDao(): TodoDao
    }
그대로 복붙해서 넣기

5. 
val db = Room.databaseBuilder(
            applicationContext,
            AppDatabase::class.java, "database-name"
        ).allowMainThreadQueries()
            .build()
복붙해서 사용


6. 원래는 .allowMainThreadQueries() 사용 X
DB 관련처리는 백그라운드에서 처리해야함
JAVA에서는 어싱크테스트 사용
코틀린에서는 코루틴 사용하면 편함
implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.2.0' 추가


lifecycleScope.launch(Dispatchers.IO) {
                db.TodoDao().insert(Todo(input.getText().toString()))
            }
할려는 거에 lifecycleScope.launch(Dispatchers.IO) 로 감싸면됨
DISPATCHER.IO는 백그라운드를 의미