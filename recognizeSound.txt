구글 내장된 음성인식
1. 퍼미션 추가

    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="android.permission.RECORD_AUDIO"/>

2. 코드
package com.example.myapplication;

import androidx.appcompat.app.AppCompatActivity;
import androidx.core.app.ActivityCompat;

import android.Manifest;
import android.content.Intent;
import android.os.Build;
import android.speech.RecognitionListener;
import android.speech.RecognizerIntent;
import android.speech.SpeechRecognizer;

import android.os.Bundle;
import android.widget.Button;
import android.widget.TextView;
import android.widget.Toast;

import java.util.ArrayList;

public class RecognizeSound extends AppCompatActivity {
    Intent intent;
    SpeechRecognizer mRecognizer;
    Button sttBtn;
    TextView textView;
    final int PERMISSION = 1;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_recognize_sound);
        if ( Build.VERSION.SDK_INT >= 23 ){
            // 퍼미션 체크
            ActivityCompat.requestPermissions(this, new String[]{Manifest.permission.INTERNET, Manifest.permission.RECORD_AUDIO},PERMISSION);
        }

        textView=(TextView)findViewById(R.id.sttResult);
        sttBtn=(Button)findViewById(R.id.sttStart);
        intent=new Intent(RecognizerIntent.ACTION_RECOGNIZE_SPEECH);

        intent.putExtra(RecognizerIntent.EXTRA_CALLING_PACKAGE,getPackageName());
        intent.putExtra(RecognizerIntent.EXTRA_LANGUAGE,"ko-KR");

        sttBtn.setOnClickListener(view -> {
            mRecognizer = SpeechRecognizer.createSpeechRecognizer(this);
            mRecognizer.setRecognitionListener(listener);
            mRecognizer.startListening(intent);
        });

    }
    private RecognitionListener listener= new RecognitionListener() {
        @Override
        public void onReadyForSpeech(Bundle bundle) {
            Toast.makeText(getApplicationContext(),"음성인식시작",Toast.LENGTH_SHORT).show();;
        }

        @Override
        public void onBeginningOfSpeech() {

        }

        @Override
        public void onRmsChanged(float v) {

        }

        @Override
        public void onBufferReceived(byte[] bytes) {

        }

        @Override
        public void onEndOfSpeech() {

        }

        @Override
        public void onError(int i) {
            String message;
            switch(i){
                case SpeechRecognizer.ERROR_AUDIO: {
                    message = "오디오 에러";
                    break;
                }
                case SpeechRecognizer.ERROR_CLIENT: {
                    message = "클라이언트 에러";
                    break;
                }
                case SpeechRecognizer.ERROR_INSUFFICIENT_PERMISSIONS: {
                    message = "퍼미션 없음";
                    break;
                }
                case SpeechRecognizer.ERROR_NETWORK: {
                    message = "네트워크 에러";
                    break;
                }
                case SpeechRecognizer.ERROR_NETWORK_TIMEOUT: {
                    message = "네트웍 타임아웃";
                    break;
                }
                case SpeechRecognizer.ERROR_NO_MATCH: {
                    message = "찾을 수 없음";
                    break;
                }
                case SpeechRecognizer.ERROR_RECOGNIZER_BUSY: {
                    message = "RECOGNIZER가 바쁨";
                    break;
                }
                case SpeechRecognizer.ERROR_SERVER: {
                    message = "서버가 이상함";
                    break;
                }
                case SpeechRecognizer.ERROR_SPEECH_TIMEOUT: {
                    message = "말하는 시간초과";
                    break;
                }
                default: {
                    message = "알 수 없는 오류임";
                    break;
                }
            }
            Toast.makeText(getApplicationContext(),"에러발생. : "+message,Toast.LENGTH_SHORT).show();
        }

        @Override
        public void onResults(Bundle results) {
            ArrayList<String> matches=results.getStringArrayList(SpeechRecognizer.RESULTS_RECOGNITION);
            for(int i=0;i<matches.size();i++){
                textView.setText(matches.get(i));
            }
        }

        @Override
        public void onPartialResults(Bundle bundle) {

        }

        @Override
        public void onEvent(int i, Bundle bundle) {

        }
    };


}